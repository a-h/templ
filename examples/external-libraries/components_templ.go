// Code generated by templ@(devel) DO NOT EDIT.

package main

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

func graph(data []TimeValue) templ.ComponentScript {
	return templ.ComponentScript{
		Name: `__templ_graph_c2ba`,
		Function: `function __templ_graph_c2ba(data){const chart = LightweightCharts.createChart(document.body, { width: 400, height: 300 });
	const lineSeries = chart.addLineSeries();
	lineSeries.setData(data);}`,
		Call: templ.SafeScript(`__templ_graph_c2ba`, data),
	}
}

func page(data []TimeValue) templ.Component {
	return templ.ComponentFunc(func(templCtx context.Context, templW io.Writer) (templErr error) {
		templBuffer, templIsBuffer := templW.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		templCtx = templ.InitializeContext(templCtx)
		templVar1 := templ.GetChildren(templCtx)
		if templVar1 == nil {
			templVar1 = templ.NopComponent
		}
		templCtx = templ.ClearChildren(templCtx)
		_, templErr = templBuffer.WriteString("<html><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>")
		if templErr != nil {
			return templErr
		}
		templVar2 := `Graphs`
		_, templErr = templBuffer.WriteString(templVar2)
		if templErr != nil {
			return templErr
		}
		_, templErr = templBuffer.WriteString("</title><script src=\"https://unpkg.com/lightweight-charts/dist/lightweight-charts.standalone.production.js\">")
		if templErr != nil {
			return templErr
		}
		templVar3 := ``
		_, templErr = templBuffer.WriteString(templVar3)
		if templErr != nil {
			return templErr
		}
		_, templErr = templBuffer.WriteString("</script></head>")
		if templErr != nil {
			return templErr
		}
		templErr = templ.RenderScriptItems(templCtx, templBuffer, graph(data))
		if templErr != nil {
			return templErr
		}
		_, templErr = templBuffer.WriteString("<body onload=\"")
		if templErr != nil {
			return templErr
		}
		var templVar4 templ.ComponentScript = graph(data)
		_, templErr = templBuffer.WriteString(templVar4.Call)
		if templErr != nil {
			return templErr
		}
		_, templErr = templBuffer.WriteString("\"></body></html>")
		if templErr != nil {
			return templErr
		}
		if !templIsBuffer {
			_, templErr = templBuffer.WriteTo(templW)
		}
		return templErr
	})
}

// Code generated by templ@(devel) DO NOT EDIT.

package httpdebug

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

func list(uris []string) templ.Component {
	return templ.ComponentFunc(func(templCtx context.Context, templW io.Writer) (templErr error) {
		templBuffer, templIsBuffer := templW.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		templCtx = templ.InitializeContext(templCtx)
		templVar1 := templ.GetChildren(templCtx)
		if templVar1 == nil {
			templVar1 = templ.NopComponent
		}
		templCtx = templ.ClearChildren(templCtx)
		_, templErr = templBuffer.WriteString("<table><tr><th>")
		if templErr != nil {
			return templErr
		}
		templVar2 := `File`
		_, templErr = templBuffer.WriteString(templVar2)
		if templErr != nil {
			return templErr
		}
		_, templErr = templBuffer.WriteString("</th><th></th><th></th><th></th><th></th></tr>")
		if templErr != nil {
			return templErr
		}
		for _, uri := range uris {
			_, templErr = templBuffer.WriteString("<tr><td>")
			if templErr != nil {
				return templErr
			}
			var templVar3 string = uri
			_, templErr = templBuffer.WriteString(templ.EscapeString(templVar3))
			if templErr != nil {
				return templErr
			}
			_, templErr = templBuffer.WriteString("</td><td><a href=\"")
			if templErr != nil {
				return templErr
			}
			var templVar4 templ.SafeURL = getMapURL(uri)
			_, templErr = templBuffer.WriteString(templ.EscapeString(string(templVar4)))
			if templErr != nil {
				return templErr
			}
			_, templErr = templBuffer.WriteString("\">")
			if templErr != nil {
				return templErr
			}
			templVar5 := `Mapping`
			_, templErr = templBuffer.WriteString(templVar5)
			if templErr != nil {
				return templErr
			}
			_, templErr = templBuffer.WriteString("</a></td><td><a href=\"")
			if templErr != nil {
				return templErr
			}
			var templVar6 templ.SafeURL = getSourceMapURL(uri)
			_, templErr = templBuffer.WriteString(templ.EscapeString(string(templVar6)))
			if templErr != nil {
				return templErr
			}
			_, templErr = templBuffer.WriteString("\">")
			if templErr != nil {
				return templErr
			}
			templVar7 := `Source Map`
			_, templErr = templBuffer.WriteString(templVar7)
			if templErr != nil {
				return templErr
			}
			_, templErr = templBuffer.WriteString("</a></td><td><a href=\"")
			if templErr != nil {
				return templErr
			}
			var templVar8 templ.SafeURL = getTemplURL(uri)
			_, templErr = templBuffer.WriteString(templ.EscapeString(string(templVar8)))
			if templErr != nil {
				return templErr
			}
			_, templErr = templBuffer.WriteString("\">")
			if templErr != nil {
				return templErr
			}
			templVar9 := `Templ`
			_, templErr = templBuffer.WriteString(templVar9)
			if templErr != nil {
				return templErr
			}
			_, templErr = templBuffer.WriteString("</a></td><td><a href=\"")
			if templErr != nil {
				return templErr
			}
			var templVar10 templ.SafeURL = getGoURL(uri)
			_, templErr = templBuffer.WriteString(templ.EscapeString(string(templVar10)))
			if templErr != nil {
				return templErr
			}
			_, templErr = templBuffer.WriteString("\">")
			if templErr != nil {
				return templErr
			}
			templVar11 := `Go`
			_, templErr = templBuffer.WriteString(templVar11)
			if templErr != nil {
				return templErr
			}
			_, templErr = templBuffer.WriteString("</a></td></tr>")
			if templErr != nil {
				return templErr
			}
		}
		_, templErr = templBuffer.WriteString("</table>")
		if templErr != nil {
			return templErr
		}
		if !templIsBuffer {
			_, templErr = templBuffer.WriteTo(templW)
		}
		return templErr
	})
}

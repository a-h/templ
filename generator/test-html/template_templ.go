// Code generated by templ@(devel) DO NOT EDIT.

package testhtml

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

func render(p person) templ.Component {
	return templ.ComponentFunc(func(templCtx context.Context, templW io.Writer) (templErr error) {
		templBuffer, templIsBuffer := templW.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		templCtx = templ.InitializeContext(templCtx)
		templVar1 := templ.GetChildren(templCtx)
		if templVar1 == nil {
			templVar1 = templ.NopComponent
		}
		templCtx = templ.ClearChildren(templCtx)
		_, templErr = templBuffer.WriteString("<div><h1>")
		if templErr != nil {
			return templErr
		}
		var templVar2 string = p.name
		_, templErr = templBuffer.WriteString(templ.EscapeString(templVar2))
		if templErr != nil {
			return templErr
		}
		_, templErr = templBuffer.WriteString("</h1><div style=\"font-family: &#39;sans-serif&#39;\" id=\"test\" data-contents=\"")
		if templErr != nil {
			return templErr
		}
		_, templErr = templBuffer.WriteString(templ.EscapeString(`something with "quotes" and a <tag>`))
		if templErr != nil {
			return templErr
		}
		_, templErr = templBuffer.WriteString("\"><div>")
		if templErr != nil {
			return templErr
		}
		templVar3 := `email:`
		_, templErr = templBuffer.WriteString(templVar3)
		if templErr != nil {
			return templErr
		}
		_, templErr = templBuffer.WriteString("<a href=\"")
		if templErr != nil {
			return templErr
		}
		var templVar4 templ.SafeURL = templ.URL("mailto: " + p.email)
		_, templErr = templBuffer.WriteString(templ.EscapeString(string(templVar4)))
		if templErr != nil {
			return templErr
		}
		_, templErr = templBuffer.WriteString("\">")
		if templErr != nil {
			return templErr
		}
		var templVar5 string = p.email
		_, templErr = templBuffer.WriteString(templ.EscapeString(templVar5))
		if templErr != nil {
			return templErr
		}
		_, templErr = templBuffer.WriteString("</a></div></div></div><hr")
		if templErr != nil {
			return templErr
		}
		if true {
			_, templErr = templBuffer.WriteString(" noshade")
			if templErr != nil {
				return templErr
			}
		}
		_, templErr = templBuffer.WriteString("><hr optionA")
		if templErr != nil {
			return templErr
		}
		if true {
			_, templErr = templBuffer.WriteString(" optionB")
			if templErr != nil {
				return templErr
			}
		}
		_, templErr = templBuffer.WriteString(" optionC=\"other\"")
		if templErr != nil {
			return templErr
		}
		if false {
			_, templErr = templBuffer.WriteString(" optionD")
			if templErr != nil {
				return templErr
			}
		}
		_, templErr = templBuffer.WriteString("><hr noshade>")
		if templErr != nil {
			return templErr
		}
		if !templIsBuffer {
			_, templErr = templBuffer.WriteTo(templW)
		}
		return templErr
	})
}

// Code generated by templ@(devel) DO NOT EDIT.

package testdoctype

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

func Layout(title, content string) templ.Component {
	return templ.ComponentFunc(func(templCtx context.Context, templW io.Writer) (templErr error) {
		templBuffer, templIsBuffer := templW.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		templCtx = templ.InitializeContext(templCtx)
		templVar1 := templ.GetChildren(templCtx)
		if templVar1 == nil {
			templVar1 = templ.NopComponent
		}
		templCtx = templ.ClearChildren(templCtx)
		_, templErr = templBuffer.WriteString("<!doctype html><html lang=\"en\"><head><meta charset=\"UTF-8\"><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>")
		if templErr != nil {
			return templErr
		}
		var templVar2 string = title
		_, templErr = templBuffer.WriteString(templ.EscapeString(templVar2))
		if templErr != nil {
			return templErr
		}
		_, templErr = templBuffer.WriteString("</title></head><body>")
		if templErr != nil {
			return templErr
		}
		var templVar3 string = content
		_, templErr = templBuffer.WriteString(templ.EscapeString(templVar3))
		if templErr != nil {
			return templErr
		}
		_, templErr = templBuffer.WriteString("</body></html>")
		if templErr != nil {
			return templErr
		}
		if !templIsBuffer {
			_, templErr = templBuffer.WriteTo(templW)
		}
		return templErr
	})
}

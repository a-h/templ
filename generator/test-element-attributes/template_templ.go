// Code generated by templ@(devel) DO NOT EDIT.

package testelementattributes

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"
import "strings"

func important() templ.CSSClass {
	var templCSSBuilder strings.Builder
	templCSSBuilder.WriteString(`width:100;`)
	templCSSID := templ.CSSID(`important`, templCSSBuilder.String())
	return templ.ComponentCSSClass{
		ID:    templCSSID,
		Class: templ.SafeCSS(`.` + templCSSID + `{` + templCSSBuilder.String() + `}`),
	}
}

func unimportant() templ.CSSClass {
	var templCSSBuilder strings.Builder
	templCSSBuilder.WriteString(`width:50;`)
	templCSSID := templ.CSSID(`unimportant`, templCSSBuilder.String())
	return templ.ComponentCSSClass{
		ID:    templCSSID,
		Class: templ.SafeCSS(`.` + templCSSID + `{` + templCSSBuilder.String() + `}`),
	}
}

func render(p person) templ.Component {
	return templ.ComponentFunc(func(templCtx context.Context, templW io.Writer) (templErr error) {
		templBuffer, templIsBuffer := templW.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		templCtx = templ.InitializeContext(templCtx)
		templVar1 := templ.GetChildren(templCtx)
		if templVar1 == nil {
			templVar1 = templ.NopComponent
		}
		templCtx = templ.ClearChildren(templCtx)
		var templVar2 = []any{important()}
		templErr = templ.RenderCSSItems(templCtx, templBuffer, templVar2...)
		if templErr != nil {
			return templErr
		}
		_, templErr = templBuffer.WriteString("<div style=\"width: 100;\"")
		if templErr != nil {
			return templErr
		}
		if p.important {
			_, templErr = templBuffer.WriteString(" class=\"")
			if templErr != nil {
				return templErr
			}
			_, templErr = templBuffer.WriteString(templ.EscapeString(templ.CSSClasses(templVar2).String()))
			if templErr != nil {
				return templErr
			}
			_, templErr = templBuffer.WriteString("\"")
			if templErr != nil {
				return templErr
			}
		}
		_, templErr = templBuffer.WriteString(">")
		if templErr != nil {
			return templErr
		}
		templVar3 := `Important`
		_, templErr = templBuffer.WriteString(templVar3)
		if templErr != nil {
			return templErr
		}
		_, templErr = templBuffer.WriteString("</div>")
		if templErr != nil {
			return templErr
		}
		var templVar4 = []any{unimportant}
		templErr = templ.RenderCSSItems(templCtx, templBuffer, templVar4...)
		if templErr != nil {
			return templErr
		}
		_, templErr = templBuffer.WriteString("<div style=\"width: 100;\"")
		if templErr != nil {
			return templErr
		}
		if !p.important {
			_, templErr = templBuffer.WriteString(" class=\"")
			if templErr != nil {
				return templErr
			}
			_, templErr = templBuffer.WriteString(templ.EscapeString(templ.CSSClasses(templVar4).String()))
			if templErr != nil {
				return templErr
			}
			_, templErr = templBuffer.WriteString("\"")
			if templErr != nil {
				return templErr
			}
		}
		_, templErr = templBuffer.WriteString(">")
		if templErr != nil {
			return templErr
		}
		templVar5 := `Unimportant`
		_, templErr = templBuffer.WriteString(templVar5)
		if templErr != nil {
			return templErr
		}
		_, templErr = templBuffer.WriteString("</div>")
		if templErr != nil {
			return templErr
		}
		var templVar6 = []any{important}
		templErr = templ.RenderCSSItems(templCtx, templBuffer, templVar6...)
		if templErr != nil {
			return templErr
		}
		var templVar7 = []any{unimportant}
		templErr = templ.RenderCSSItems(templCtx, templBuffer, templVar7...)
		if templErr != nil {
			return templErr
		}
		_, templErr = templBuffer.WriteString("<div style=\"width: 100;\"")
		if templErr != nil {
			return templErr
		}
		if p.important {
			_, templErr = templBuffer.WriteString(" class=\"")
			if templErr != nil {
				return templErr
			}
			_, templErr = templBuffer.WriteString(templ.EscapeString(templ.CSSClasses(templVar6).String()))
			if templErr != nil {
				return templErr
			}
			_, templErr = templBuffer.WriteString("\"")
			if templErr != nil {
				return templErr
			}
		} else {
			_, templErr = templBuffer.WriteString(" class=\"")
			if templErr != nil {
				return templErr
			}
			_, templErr = templBuffer.WriteString(templ.EscapeString(templ.CSSClasses(templVar7).String()))
			if templErr != nil {
				return templErr
			}
			_, templErr = templBuffer.WriteString("\"")
			if templErr != nil {
				return templErr
			}
		}
		_, templErr = templBuffer.WriteString(">")
		if templErr != nil {
			return templErr
		}
		templVar8 := `Else`
		_, templErr = templBuffer.WriteString(templVar8)
		if templErr != nil {
			return templErr
		}
		_, templErr = templBuffer.WriteString("</div><div data-script=\"on click\n                do something\n             end\"></div>")
		if templErr != nil {
			return templErr
		}
		if !templIsBuffer {
			_, templErr = templBuffer.WriteTo(templW)
		}
		return templErr
	})
}

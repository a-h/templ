package testelementcomponent

import "fmt"
import "github.com/a-h/templ/generator/test-element-component/mod"
import extern "github.com/a-h/templ/generator/test-element-component/externmod"

templ ElementComponent() {
	<div>
		<h1>ElementComponent Demo</h1>
		<Button title={ str() } />
		<dl>
			<DData term="Name" detail="Tom Cook" />
		</dl>
		<Card title="Card Title">card body</Card>
		<h2>Named Parameter Test</h2>
		<mod.Text name="hello"/>
		<extern.Text name="world"/>
		
		<h2>All Attribute Types Test</h2>
		// Constant attribute
		<Button title="Constant String" />
		
		// Complex expression attribute
		<Button title={ "Hello " + str() + "!" } />
		
		// Boolean constant attribute (with title)
		<BoolComponent title="Bool Test" enabled />
		
		// Boolean expression attribute
		<BoolComponent title="Bool Expr" enabled?={ isEnabled() } />
		
		// Multiple attributes with different types
		<MultiComponent 
			title="Multi Test"
			count={ 42 }
			enabled
			visible?={ shouldShow() }
		/>
	</div>
}

templ Button(title string) {
	<button>{ title }</button>
}

templ DData(term, detail string) {
	<dt>{ term }</dt>
	<dd>{ detail }</dd>
}

templ Card(title string) {
	<article class="card">
		<h2>{ title }</h2>
		<main>
			{ children... }
		</main>
	</article>
}

func str() string {
	return "Click me"
}

templ BoolComponent(title string, enabled bool) {
	<div class="bool-component">
		<h3>{ title }</h3>
		if enabled {
			<span>Enabled</span>
		} else {
			<span>Disabled</span>
		}
	</div>
}

templ MultiComponent(title string, count int, enabled bool, visible bool) {
	<div class="multi-component">
		<h3>{ title } (count: { fmt.Sprint(count) })</h3>
		if enabled {
			<span>Enabled</span>
		}
		if visible {
			<span>Visible</span>
		}
	</div>
}

func isEnabled() bool {
	return true
}

func shouldShow() bool {
	return false
}

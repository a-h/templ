// Code generated by templ@(devel) DO NOT EDIT.

package testfor

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

func render(items []string) templ.Component {
	return templ.ComponentFunc(func(templCtx context.Context, templW io.Writer) (templErr error) {
		templBuffer, templIsBuffer := templW.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		templCtx = templ.InitializeContext(templCtx)
		templVar1 := templ.GetChildren(templCtx)
		if templVar1 == nil {
			templVar1 = templ.NopComponent
		}
		templCtx = templ.ClearChildren(templCtx)
		for _, item := range items {
			_, templErr = templBuffer.WriteString("<div>")
			if templErr != nil {
				return templErr
			}
			var templVar2 string = item
			_, templErr = templBuffer.WriteString(templ.EscapeString(templVar2))
			if templErr != nil {
				return templErr
			}
			_, templErr = templBuffer.WriteString("</div>")
			if templErr != nil {
				return templErr
			}
		}
		if !templIsBuffer {
			_, templErr = templBuffer.WriteTo(templW)
		}
		return templErr
	})
}

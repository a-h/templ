// Code generated by templ@(devel) DO NOT EDIT.

package testscriptusage

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"

func withParameters(a string, b string, c int) templ.ComponentScript {
	return templ.ComponentScript{
		Name: `__templ_withParameters_1056`,
		Function: `function __templ_withParameters_1056(a, b, c){console.log(a, b, c);}`,
		Call: templ.SafeScript(`__templ_withParameters_1056`, a, b, c),
	}
}

func withoutParameters() templ.ComponentScript {
	return templ.ComponentScript{
		Name: `__templ_withoutParameters_6bbf`,
		Function: `function __templ_withoutParameters_6bbf(){alert("hello");}`,
		Call: templ.SafeScript(`__templ_withoutParameters_6bbf`, ),
	}
}

func Button(text string) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		ctx, _ = templ.RenderedCSSClassesFromContext(ctx)
		ctx, _ = templ.RenderedScriptsFromContext(ctx)
		// Element (standard)
		// Element Script
		err = templ.RenderScripts(ctx, w, withParameters("test", text, 123), withoutParameters())
		if err != nil {
			return err
		}
		_, err = io.WriteString(w, "<button")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = io.WriteString(w, " onClick=")
		if err != nil {
			return err
		}
		_, err = io.WriteString(w, "\"")
		if err != nil {
			return err
		}
		var var_1 templ.ComponentScript = withParameters("test", text, 123)
		_, err = io.WriteString(w, var_1.Call)
		if err != nil {
			return err
		}
		_, err = io.WriteString(w, "\"")
		if err != nil {
			return err
		}
		_, err = io.WriteString(w, " onMouseover=")
		if err != nil {
			return err
		}
		_, err = io.WriteString(w, "\"")
		if err != nil {
			return err
		}
		var var_2 templ.ComponentScript = withoutParameters()
		_, err = io.WriteString(w, var_2.Call)
		if err != nil {
			return err
		}
		_, err = io.WriteString(w, "\"")
		if err != nil {
			return err
		}
		_, err = io.WriteString(w, " type=\"button\"")
		if err != nil {
			return err
		}
		_, err = io.WriteString(w, ">")
		if err != nil {
			return err
		}
		// StringExpression
		_, err = io.WriteString(w, templ.EscapeString(text))
		if err != nil {
			return err
		}
		_, err = io.WriteString(w, "</button>")
		if err != nil {
			return err
		}
		return err
	})
}

func ThreeButtons() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		ctx, _ = templ.RenderedCSSClassesFromContext(ctx)
		ctx, _ = templ.RenderedScriptsFromContext(ctx)
		// CallTemplate
		err = Button("A").Render(ctx, w)
		if err != nil {
			return err
		}
		// CallTemplate
		err = Button("B").Render(ctx, w)
		if err != nil {
			return err
		}
		// Element (standard)
		_, err = io.WriteString(w, "<button")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = io.WriteString(w, " onMouseover=\"console.log(&#39;mouseover&#39;)\"")
		if err != nil {
			return err
		}
		_, err = io.WriteString(w, " type=\"button\"")
		if err != nil {
			return err
		}
		_, err = io.WriteString(w, ">")
		if err != nil {
			return err
		}
		// Text
		var_3 := `Button C`
		_, err = io.WriteString(w, var_3)
		if err != nil {
			return err
		}
		_, err = io.WriteString(w, "</button>")
		if err != nil {
			return err
		}
		return err
	})
}


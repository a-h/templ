// Code generated by templ@(devel) DO NOT EDIT.

package turbo

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"

func actionTemplate(action string, target string) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		ctx, _ = templ.RenderedCSSClassesFromContext(ctx)
		ctx, _ = templ.RenderedScriptsFromContext(ctx)
		var_1 := ctx
		ctx = templ.ClearChildren(var_1)
		// Element (standard)
		_, err = io.WriteString(w, "<turbo-stream")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = io.WriteString(w, " action=")
		if err != nil {
			return err
		}
		_, err = io.WriteString(w, "\"")
		if err != nil {
			return err
		}
		_, err = io.WriteString(w, templ.EscapeString(action))
		if err != nil {
			return err
		}
		_, err = io.WriteString(w, "\"")
		if err != nil {
			return err
		}
		_, err = io.WriteString(w, " target=")
		if err != nil {
			return err
		}
		_, err = io.WriteString(w, "\"")
		if err != nil {
			return err
		}
		_, err = io.WriteString(w, templ.EscapeString(target))
		if err != nil {
			return err
		}
		_, err = io.WriteString(w, "\"")
		if err != nil {
			return err
		}
		_, err = io.WriteString(w, ">")
		if err != nil {
			return err
		}
		// Element (standard)
		_, err = io.WriteString(w, "<template>")
		if err != nil {
			return err
		}
		// Children
		err = templ.GetChildren(var_1).Render(ctx, w)
		if err != nil {
			return err
		}
		_, err = io.WriteString(w, "</template>")
		if err != nil {
			return err
		}
		_, err = io.WriteString(w, "</turbo-stream>")
		if err != nil {
			return err
		}
		return err
	})
}

func removeTemplate(action string, target string) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		ctx, _ = templ.RenderedCSSClassesFromContext(ctx)
		ctx, _ = templ.RenderedScriptsFromContext(ctx)
		var_2 := ctx
		ctx = templ.ClearChildren(var_2)
		// Element (standard)
		_, err = io.WriteString(w, "<turbo-stream")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = io.WriteString(w, " action=")
		if err != nil {
			return err
		}
		_, err = io.WriteString(w, "\"")
		if err != nil {
			return err
		}
		_, err = io.WriteString(w, templ.EscapeString(action))
		if err != nil {
			return err
		}
		_, err = io.WriteString(w, "\"")
		if err != nil {
			return err
		}
		_, err = io.WriteString(w, " target=")
		if err != nil {
			return err
		}
		_, err = io.WriteString(w, "\"")
		if err != nil {
			return err
		}
		_, err = io.WriteString(w, templ.EscapeString(target))
		if err != nil {
			return err
		}
		_, err = io.WriteString(w, "\"")
		if err != nil {
			return err
		}
		_, err = io.WriteString(w, ">")
		if err != nil {
			return err
		}
		_, err = io.WriteString(w, "</turbo-stream>")
		if err != nil {
			return err
		}
		return err
	})
}


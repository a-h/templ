// Code generated by templ@(devel) DO NOT EDIT.

package main

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"

// GoExpression
import "fmt"
import "time"

func headerTemplate(name string) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		ctx, _ = templ.RenderedCSSClassesFromContext(ctx)
		ctx, _ = templ.RenderedScriptsFromContext(ctx)
		var_1 := ctx
		ctx = templ.ClearChildren(var_1)
		// Element (standard)
		_, err = io.WriteString(w, "<header")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = io.WriteString(w, " data-testid=\"headerTemplate\"")
		if err != nil {
			return err
		}
		_, err = io.WriteString(w, ">")
		if err != nil {
			return err
		}
		// Element (standard)
		_, err = io.WriteString(w, "<h1>")
		if err != nil {
			return err
		}
		// StringExpression
		_, err = io.WriteString(w, templ.EscapeString(name))
		if err != nil {
			return err
		}
		_, err = io.WriteString(w, "</h1>")
		if err != nil {
			return err
		}
		_, err = io.WriteString(w, "</header>")
		if err != nil {
			return err
		}
		return err
	})
}

func footerTemplate() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		ctx, _ = templ.RenderedCSSClassesFromContext(ctx)
		ctx, _ = templ.RenderedScriptsFromContext(ctx)
		var_2 := ctx
		ctx = templ.ClearChildren(var_2)
		// Element (standard)
		_, err = io.WriteString(w, "<footer")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = io.WriteString(w, " data-testid=\"footerTemplate\"")
		if err != nil {
			return err
		}
		_, err = io.WriteString(w, ">")
		if err != nil {
			return err
		}
		// Element (standard)
		_, err = io.WriteString(w, "<div>")
		if err != nil {
			return err
		}
		// Text
		var_3 := `&copy; `
		_, err = io.WriteString(w, var_3)
		if err != nil {
			return err
		}
		// StringExpression
		_, err = io.WriteString(w, templ.EscapeString(fmt.Sprintf("%d", time.Now().Year())))
		if err != nil {
			return err
		}
		_, err = io.WriteString(w, "</div>")
		if err != nil {
			return err
		}
		_, err = io.WriteString(w, "</footer>")
		if err != nil {
			return err
		}
		return err
	})
}

func navTemplate() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		ctx, _ = templ.RenderedCSSClassesFromContext(ctx)
		ctx, _ = templ.RenderedScriptsFromContext(ctx)
		var_4 := ctx
		ctx = templ.ClearChildren(var_4)
		// Element (standard)
		_, err = io.WriteString(w, "<nav")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = io.WriteString(w, " data-testid=\"navTemplate\"")
		if err != nil {
			return err
		}
		_, err = io.WriteString(w, ">")
		if err != nil {
			return err
		}
		// Element (standard)
		_, err = io.WriteString(w, "<ul>")
		if err != nil {
			return err
		}
		// Element (standard)
		_, err = io.WriteString(w, "<li>")
		if err != nil {
			return err
		}
		// Element (standard)
		_, err = io.WriteString(w, "<a")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = io.WriteString(w, " href=\"/\"")
		if err != nil {
			return err
		}
		_, err = io.WriteString(w, ">")
		if err != nil {
			return err
		}
		// Text
		var_5 := `Home`
		_, err = io.WriteString(w, var_5)
		if err != nil {
			return err
		}
		_, err = io.WriteString(w, "</a>")
		if err != nil {
			return err
		}
		_, err = io.WriteString(w, "</li>")
		if err != nil {
			return err
		}
		// Element (standard)
		_, err = io.WriteString(w, "<li>")
		if err != nil {
			return err
		}
		// Element (standard)
		_, err = io.WriteString(w, "<a")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = io.WriteString(w, " href=\"/posts\"")
		if err != nil {
			return err
		}
		_, err = io.WriteString(w, ">")
		if err != nil {
			return err
		}
		// Text
		var_6 := `Posts`
		_, err = io.WriteString(w, var_6)
		if err != nil {
			return err
		}
		_, err = io.WriteString(w, "</a>")
		if err != nil {
			return err
		}
		_, err = io.WriteString(w, "</li>")
		if err != nil {
			return err
		}
		_, err = io.WriteString(w, "</ul>")
		if err != nil {
			return err
		}
		_, err = io.WriteString(w, "</nav>")
		if err != nil {
			return err
		}
		return err
	})
}

func layout(name string) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		ctx, _ = templ.RenderedCSSClassesFromContext(ctx)
		ctx, _ = templ.RenderedScriptsFromContext(ctx)
		var_7 := ctx
		ctx = templ.ClearChildren(var_7)
		// Element (standard)
		_, err = io.WriteString(w, "<html>")
		if err != nil {
			return err
		}
		// Element (standard)
		_, err = io.WriteString(w, "<head>")
		if err != nil {
			return err
		}
		// Element (standard)
		_, err = io.WriteString(w, "<title>")
		if err != nil {
			return err
		}
		// StringExpression
		_, err = io.WriteString(w, templ.EscapeString(name))
		if err != nil {
			return err
		}
		_, err = io.WriteString(w, "</title>")
		if err != nil {
			return err
		}
		_, err = io.WriteString(w, "</head>")
		if err != nil {
			return err
		}
		// Element (standard)
		_, err = io.WriteString(w, "<body>")
		if err != nil {
			return err
		}
		// TemplElement
		err = headerTemplate(name) .Render(ctx, w)
		if err != nil {
			return err
		}
		// TemplElement
		err = navTemplate() .Render(ctx, w)
		if err != nil {
			return err
		}
		// Element (standard)
		_, err = io.WriteString(w, "<main>")
		if err != nil {
			return err
		}
		// Children
		err = templ.GetChildren(var_7).Render(ctx, w)
		if err != nil {
			return err
		}
		_, err = io.WriteString(w, "</main>")
		if err != nil {
			return err
		}
		_, err = io.WriteString(w, "</body>")
		if err != nil {
			return err
		}
		// TemplElement
		err = footerTemplate().Render(ctx, w)
		if err != nil {
			return err
		}
		_, err = io.WriteString(w, "</html>")
		if err != nil {
			return err
		}
		return err
	})
}

func postsTemplate(posts []Post) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		ctx, _ = templ.RenderedCSSClassesFromContext(ctx)
		ctx, _ = templ.RenderedScriptsFromContext(ctx)
		var_8 := ctx
		ctx = templ.ClearChildren(var_8)
		// Element (standard)
		_, err = io.WriteString(w, "<div")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = io.WriteString(w, " data-testid=\"postsTemplate\"")
		if err != nil {
			return err
		}
		_, err = io.WriteString(w, ">")
		if err != nil {
			return err
		}
		// For
		for _, p := range posts {
			// Element (standard)
			_, err = io.WriteString(w, "<div")
			if err != nil {
				return err
			}
			// Element Attributes
			_, err = io.WriteString(w, " data-testid=\"postsTemplatePost\"")
			if err != nil {
				return err
			}
			_, err = io.WriteString(w, ">")
			if err != nil {
				return err
			}
			// Element (standard)
			_, err = io.WriteString(w, "<div")
			if err != nil {
				return err
			}
			// Element Attributes
			_, err = io.WriteString(w, " data-testid=\"postsTemplatePostName\"")
			if err != nil {
				return err
			}
			_, err = io.WriteString(w, ">")
			if err != nil {
				return err
			}
			// StringExpression
			_, err = io.WriteString(w, templ.EscapeString(p.Name))
			if err != nil {
				return err
			}
			_, err = io.WriteString(w, "</div>")
			if err != nil {
				return err
			}
			// Element (standard)
			_, err = io.WriteString(w, "<div")
			if err != nil {
				return err
			}
			// Element Attributes
			_, err = io.WriteString(w, " data-testid=\"postsTemplatePostAuthor\"")
			if err != nil {
				return err
			}
			_, err = io.WriteString(w, ">")
			if err != nil {
				return err
			}
			// StringExpression
			_, err = io.WriteString(w, templ.EscapeString(p.Author))
			if err != nil {
				return err
			}
			_, err = io.WriteString(w, "</div>")
			if err != nil {
				return err
			}
			_, err = io.WriteString(w, "</div>")
			if err != nil {
				return err
			}
		}
		_, err = io.WriteString(w, "</div>")
		if err != nil {
			return err
		}
		return err
	})
}

func home() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		ctx, _ = templ.RenderedCSSClassesFromContext(ctx)
		ctx, _ = templ.RenderedScriptsFromContext(ctx)
		var_9 := ctx
		ctx = templ.ClearChildren(var_9)
		// TemplElement
		var_10 := templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
			// Element (standard)
			_, err = io.WriteString(w, "<div")
			if err != nil {
				return err
			}
			// Element Attributes
			_, err = io.WriteString(w, " data-testid=\"homeTemplate\"")
			if err != nil {
				return err
			}
			_, err = io.WriteString(w, ">")
			if err != nil {
				return err
			}
			// Text
			var_11 := `Welcome to my website.`
			_, err = io.WriteString(w, var_11)
			if err != nil {
				return err
			}
			_, err = io.WriteString(w, "</div>")
			if err != nil {
				return err
			}
			return err
		})
		err = layout("Home").Render(templ.WithChildren(ctx, var_10), w)
		if err != nil {
			return err
		}
		return err
	})
}

func posts(posts []Post) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		ctx, _ = templ.RenderedCSSClassesFromContext(ctx)
		ctx, _ = templ.RenderedScriptsFromContext(ctx)
		var_12 := ctx
		ctx = templ.ClearChildren(var_12)
		// TemplElement
		var_13 := templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
			// TemplElement
			err = postsTemplate(posts).Render(ctx, w)
			if err != nil {
				return err
			}
			return err
		})
		err = layout("Posts").Render(templ.WithChildren(ctx, var_13), w)
		if err != nil {
			return err
		}
		return err
	})
}

